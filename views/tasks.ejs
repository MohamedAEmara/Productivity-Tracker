<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productivity Tracker</title>
    <style>
body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
  overflow-x: hidden;
}

header {
  background-color: #333;
  color: #fff;
  padding: 1em;
}

nav ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

nav li {
  display: inline;
  margin-right: 20px;
}

main {
  display: flex;
  flex-wrap: wrap;
}

.sidebar {
  background-color: #333;
  color: #fff;
  padding: 20px;
  width: 200px;
  min-height: 100vh;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.sidebar ul {
  padding: 0;
  list-style: none;
}

.sidebar li {
  margin-bottom: 10px;
}

.sidebar a {
  text-decoration: none;
  color: #fff;
  font-size: 18px;
}

.sidebar a.active {
  font-weight: bold;
}

.task-manager {
  background-color: #fff;
  border-radius: 8px;
  /* box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); */
  padding: 20px;
  flex: 1;
  margin-left: 20px;
}

#create-task-btn {
  background-color: #4caf50;
  color: #fff;
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

#task-list {
  list-style: none;
  padding: 0;
}

.task-item {
  border: 1px solid #ddd;
  margin: 10px 0;
  padding: 10px;
  border-radius: 4px;
  display: flex;
  justify-content: space-between;
}

.task-details {
  display: flex;
  align-items: center;
}

.task-title {
  font-size: 18px;
  margin-right: 10px;
}

.task-timer {
  font-size: 16px;
  color: #333;
}

.add-task-button {
  position: fixed;
  bottom: 20px;
  right: 20px;
}

#add-task-btn {
  background-color: #3498db;
  color: #fff;
  border: none;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  font-size: 24px;
  cursor: pointer;
}



body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
  overflow-x: hidden; 
}




header {
    text-align: center;
    background-color: #333;
    color: #fff;
    padding: 1em;
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1000;
}

main {
  display: flex;
  flex-wrap: wrap;
  margin-top: 60px;
}

.sidebar {
  background-color: #333;
  color: #fff;
  padding: 20px;
  width: 200px;
  min-height: 100vh;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  position: fixed;
  top: 60px; 
  z-index: 999;
}



.sidebar {
  background-color: #333;
  color: #fff;
  padding: 20px;
  width: 200px;
  min-height: 100vh;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  transform: translateX(-100%); 
  transition: transform 0.3s ease-in-out;
}

.sidebar.visible {
  transform: translateX(0); 
  height: 100%;
}
.task-manager {
  background-color: #0c0c0c;
  border-radius: 8px;
  /* box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); */
  padding: 20px;
  flex: 1;
  margin-left: 20px;
  transition: margin-left 0.3s ease-in-out; 
}

.sidebar.visible + .task-manager {
  margin-left: 270px;
}

.task-manager {
    margin-right: 20px;
    margin-top: 40px;
}

#task-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 40px;
}

h1 {
  padding-bottom: 20px;
}
.task-card {
  /* background-color: #ffffff; */
  background-color: #404040;
  border: 1px solid #e0e0e0;
  border-radius: 15px;
  padding: 20px;
  width: 200px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s;
  display: flex;
  flex-direction: column;
}

.task-card:hover {
  transform: translateY(-5px);
}

.button-container {
  /* margin-top: auto; */
  display: flex;
  justify-content: space-around;
}

.button {
  background-color: #3498db; 
  color: #ffffff;
  /* padding: 8px 12px; */
  border: none;
  border-radius: 12px;
  cursor: pointer;
  transition: background-color 0.3s;
}

button {
  border: 0px solid;
}
.button:hover {
  background-color: #2980b9; 
}

header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 6em;
  padding-top: 0;
  padding-bottom: 0;
}

.logo {
  margin-right: 50%;
}

form#delete-form {
  border-radius: 15px;
  background-color: white;
}
.red {
  background-color: rgb(255, 255, 255);
  /* padding: 7px; */
  font-size: 16px;
  font-weight: 500;
  color: white;
  border-radius: 15px;
  box-shadow: 0px 0px 15px #888888;
  /* width: 30%; */
  color: black;
  padding: 8px;
}

.blue {
  color: black;
  /* padding: 7px; */
  border-radius: 15px;
  background-color: rgb(255, 255, 255);
  font-size: 16px;rgb(255, 255, 255);
  font-weight: 500;
  /* width: 2rem; */
  /* color: white; */
  box-shadow: 0px 0px 15px #888888;
  padding: 8px;
}

button:hover{
  cursor: pointer;
}
#delete-form {
  padding: 0px;
}

.task-card {
  /* box-shadow: 0px 0px 15px #888888; */
  background-color: hsl(0, 0%, 20%);
  color: #ffffff;
}

.button-container {
  display: flex;
  /* justify-content: end; */
  /* gap: 8px; */
  justify-content: center;
  gap: 20px;
  /* padding-left: 0px; */
}
  #toggle-sidebar-btn {
    padding: 5px 10px;
    font-size: 15px;
  }


  #profile-image {
    width: 60px;
    border-radius: 15px;
  }

  .profile {
    display: flex;
    align-items: flex-end;
    gap: 10px;
    margin-bottom: 80px;
  }

  body {
    margin: 0;
    padding: 0;
    height: 100vh; /* Make sure the body takes up the full height of the viewport */
    background-color: #0c0c0c;
  }

  .task-manager {
    background-color: #0c0c0c;
  }
  
  .delete-button {
    border-radius: 15px;
  }
  /* .task-card {
    
    background:  rgb(136, 135, 135);
  } */

  .task-card.done {
    
    /* background-color: rgb(136, 135, 135); */
    background-color: hsl(0, 0%, 20%);
  }
  
  h1 {
    color: white;
  }


  input {
            color: black !important;
        }


    </style>    
    <script>
          document.addEventListener('DOMContentLoaded', function () {
          const toggleSidebarBtn = document.getElementById('toggle-sidebar-btn');
          const sidebar = document.querySelector('.sidebar');
          const taskManager = document.getElementById('task-manager');
          const taskContainer = document.getElementById('task-container');

      
          toggleSidebarBtn.addEventListener('click', function () {
            sidebar.classList.toggle('visible');
            const isSidebarVisible = sidebar.classList.contains('visible');
            taskManager.style.marginLeft = isSidebarVisible ? '270px' : '20px';
            taskContainer.style.marginLeft = isSidebarVisible ? '270px' : '20px';
          });
        });
      </script>
</head>
<body>
    <header>
      <button id="toggle-sidebar-btn">&#9776;</button>
      <h3 class="logo">Productivity Tracker</h3>
    </header>

    <main>
        <aside class="sidebar">
          <a href="/users/profile">
            <div class="profile">
              <img src="<%= hero.profilePic %>" id="profile-image">
              <div><%= hero.username %></div>
            </div>
          </a>
        <ul>
          <li><a href="/users/dashboard">Dashboard</a></li>
          <li><a href="/tasks/all" class="">All Tasks</a></li>
          <li><a href="/tasks/completed" class="">Completed</a></li>
          <li><a href="/tasks/notCompleted" class="">Not Completed</a></li>
          <li><a href="#" onclick="logout()">Logout</a></li>
        </ul>
        </aside>

        <section class="task-manager">
        <h1><%=page%></h1>
        <div id="task-container">
          <% tasks.forEach(task => { %>
            <div class="task-card <%= task.completed ? 'done' : 'not-done' %>">
              <h3><%= task.name %></h3>
              <p>Task Time: <%= task.time %></p>
              <p>Time Remaining: <%= task.remainingTime %></p>
              <p>Status: <%= task.completed ? 'Done' : 'In Progress' %></p>
              
              <% if (!task.completed) { %>
                <div class="button-container">
                  <form action="/tasks/<%= task._id %>" method="GET" class="button delete-button">
                    <button class="blue">Start</button>
                  </form>
                  <form action="/tasks/<%= task._id %>" method="POST" class="button delete-button">
                    <input type="hidden" name="_method" value="PATCH">
                    <button type="submit" class="red">Edit</button>
                  </form>
                  <form action="/tasks/<%= task._id %>" method="POST" class="button delete-button">
                    <input type="hidden" name="_method" value="DELETE">
                    <button type="submit" class="red">Delete</button>
                  </form>
                </div>
              <% } else { %>
                <div class="button-container">
                  <form action="/tasks/<%= task._id %>" method="POST" class="button delete-button">
                    <input type="hidden" name="_method" value="PATCH">
                    <button type="submit" class="red">Edit</button>
                  </form>
                  <form action="/tasks/<%= task._id %>" method="POST" class="button delete-button">
                    <input type="hidden" name="_method" value="DELETE">
                    <button type="submit" class="red">Delete</button>
                  </form>
                </div>
              <% } %>
        
            
            </div>
          <% }); %>
        </div>
        </section>
    </main>
  
    <div class="add-task-button">
        <a href="/tasks/add">
            <button id="add-task-btn" href="localhost:3000/tasks/add">+</button>

        </a>
    </div>


    <script>
      

      function logout() {
        // Create a form element
        const form = document.createElement('form');
        form.method = 'POST'; // Set the HTTP method to POST
        form.action = '/users/auth/logout'; // Set the form action to the logout endpoint
  
        // Append the form to the body
        document.body.appendChild(form);
  
        // Create a submit button and append it to the form
        const submitBtn = document.createElement('input');
        submitBtn.type = 'submit';
        form.appendChild(submitBtn);
  
        // Submit the form
        form.submit();
      }
      </script>
    
    
</body>
</html>
