<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/style.css">
    <title>Productivity Tracker</title>
    <style>
body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
  overflow-x: hidden;
}

header {
  background-color: #333;
  color: #fff;
  padding: 1em;
}

nav ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

nav li {
  display: inline;
  margin-right: 20px;
}

/* main {
  display: flex;
  flex-wrap: wrap;
} */

.sidebar {
  background-color: #333;
  color: #fff;
  padding: 20px;
  width: 200px;
  min-height: 100vh;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.sidebar ul {
  padding: 0;
  list-style: none;
}

.sidebar li {
  margin-bottom: 10px;
}

.sidebar a {
  text-decoration: none;
  color: #fff;
  font-size: 18px;
}

.sidebar a.active {
  font-weight: bold;
}

.task-manager {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
  flex: 1;
  margin-left: 20px;
}

#create-task-btn {
  background-color: #4caf50;
  color: #fff;
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

#task-list {
  list-style: none;
  padding: 0;
}

.task-item {
  border: 1px solid #ddd;
  margin: 10px 0;
  padding: 10px;
  border-radius: 4px;
  /* display: flex;
  justify-content: space-between; */
}

.task-details {
  display: flex;
  align-items: center;
}

.task-title {
  font-size: 18px;
  margin-right: 10px;
}

.task-timer {
  font-size: 16px;
  color: #333;
}

.add-task-button {
  position: fixed;
  bottom: 20px;
  right: 20px;
}

#add-task-btn {
  background-color: #3498db;
  color: #fff;
  border: none;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  font-size: 24px;
  cursor: pointer;
}



body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
  overflow-x: hidden; 
}




header {
    text-align: center;
    background-color: #333;
    color: #fff;
    padding: 1em;
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1000;
}

/* main {
  display: flex;
  flex-wrap: wrap;
  margin-top: 60px;
} */

.sidebar {
  background-color: #333;
  color: #fff;
  padding: 20px;
  width: 200px;
  min-height: 100vh;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  position: fixed;
  top: 60px; 
  z-index: 999;
}



.sidebar {
  background-color: #333;
  color: #fff;
  padding: 20px;
  width: 200px;
  min-height: 100vh;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  transform: translateX(-100%); 
  transition: transform 0.3s ease-in-out;
}

.sidebar.visible {
  transform: translateX(0); 
}
.task-manager {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
  flex: 1;
  margin-left: 20px;
  transition: margin-left 0.3s ease-in-out; 
}

.sidebar.visible + .task-manager {
  margin-left: 270px;
}

.task-manager {
    margin-right: 20px;
    margin-top: 40px;

    width: min(80%, 400px);
}

/* #task-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
} */

/* .task-card {
  background-color: #ffffff;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 20px;
  width: 200px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s;
  display: flex;
  flex-direction: column;
} */

.task-card:hover {
  transform: translateY(-5px);
}

.done {
  color: #2ecc71; 
}

.not-done {
  color: #e74c3c; 
}

.button-container {
  margin-top: auto;
  display: flex;
  justify-content: space-between;
}

.button {
  background-color: #3498db; 
  color: #ffffff;
  padding: 8px 12px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.button:hover {
  background-color: #2980b9; 
}

header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 6em;
  padding-top: 0;
  padding-bottom: 0;
}

.logo {
  margin-right:  42%;
 
}

#toggle-sidebar-btn {
    padding: 5px 10px;
    font-size: 15px;
    color: black !important;
}

.add-task-popup {
    display: flex;
    flex-direction: column;

    gap: 20px;
  
}

.input-group {
    display: flex;
    justify-content: space-between; 
    align-items: center;
    gap: 30px;    
}


.cancel {
  border-radius: 20px;
  height: 30px;
  width: 30px;
}

.cancelBtn {
  justify-content: center;
  font-size: 20px;
  font-weight: 700;
  background-color: white;
  color: black !important;
  border: 0;
  width: 30px;
  height: 30px;
  border-radius: 20px;
}

section.task-manager {
    display: block !important;
    margin: auto !important;
    /* width: min(90%, 340px) !important; Optional: Specify the width of the element */
    margin-top: max(20%, 200px) !important;
    background-color: #333;
}

* {
  color:white !important;
}

#top {
  /* margin-top: 0; */
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 25px;
}

form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

input {
            color: black !important;
        }

.button-container {
  align-self: center;
}

.button {
  width: 100px;
}

.time {
  display: flex;
  /* gap: 8px; */
  justify-content: space-between;
}

input[type="number"] {
  width: 30px;
  text-align: center;
}

.time > * {
  gap: 5px;
}

#taskName {
  width: 60%;
}

#edit-btn {
    width: fit-content;
    align-self: center;
    padding: 10px;
    padding-left: 20px;
    padding-right: 20px;
    font-size: 15px;
    font-weight: 500;
  
}



#profile-image {
    width: 60px;
    border-radius: 30px;
}

.profile {
  display: flex;
  align-items: flex-end;
  gap: 10px;
  margin-bottom: 80px;
}

body {
    margin: 0;
    padding: 0;
    height: 100vh; /* Make sure the body takes up the full height of the viewport */
    background-color: #000;
}
  
  /* .task-card {
    
    background:  rgb(136, 135, 135);
  } */

  .task-card.done {
    
    background-color: rgb(136, 135, 135);
  }

  p {
    margin: 5px 0px;
  }

    </style>    
    <script>
          document.addEventListener('DOMContentLoaded', function () {
          const toggleSidebarBtn = document.getElementById('toggle-sidebar-btn');
          const sidebar = document.querySelector('.sidebar');
          const taskManager = document.getElementById('task-manager');
          const taskContainer = document.getElementById('task-container');

      
          toggleSidebarBtn.addEventListener('click', function () {
            sidebar.classList.toggle('visible');
            const isSidebarVisible = sidebar.classList.contains('visible');
            taskManager.style.marginLeft = isSidebarVisible ? '270px' : '20px';
            taskContainer.style.marginLeft = isSidebarVisible ? '270px' : '20px';
          });
        });
      </script>
</head>
<body>
    <header>
      <button id="toggle-sidebar-btn">&#9776;</button>
      <h3 class="logo">Productivity Tracker</h3>
    </header>

    <main>
      <aside class="sidebar">
        <a href="/users/profile">
          <div class="profile">
            <img src="<%= hero.profilePic %>" id="profile-image">
            <div><%= hero.username %></div>
          </div>
        </a>
      <ul>
        <li><a href="/users/dashboard">Dashboard</a></li>
        <li><a href="/tasks/all" class="">All Tasks</a></li>
        <li><a href="/tasks/completed" class="">Completed</a></li>
        <li><a href="/tasks/notCompleted" class="">Not Completed</a></li>
        <li><a href="#" onclick="logout()">Logout</a></li>
      </ul>
      </aside>

        <section class="task-manager">
            <div id="top">
              <h2>Edit Task</h2>
              <a class="cancel" href="/tasks/all"><button class="cancelBtn">x</button></a>
            </div>
                <main>
                    <div class="add-task-popup">
                        <form action="/tasks/<%= task._id %>/update" method="POST">
                            <input type="hidden" name="_method" value="PATCH">
                          <div class="input-group">
                              <label for="taskName">Task Name:</label>
                              <input type="text" id="taskName" name="taskName" value = "<%= task.name %>" required>
                          </div>
                          
                          <div class="all">
                            <p>Time:</p>
                            <div class="time">
                              <div class="input-group">
                                <label for="hours">Hours:</label>
                                <input type="number" id="hours" name="hours" min="0" value="<%= hours %>" required>
                              </div>
                              <div class="input-group">
                                <label for="minutes">Mins:</label>
                                <input type="number" id="minutes" name="minutes" min="0" max="59" value = "<%= mins %>" required>
                              </div>
                              <div class="input-group">
                                <label for="seconds">Secs:</label>
                                <input type="number" id="seconds" name="seconds" min="0" max="59" value="<%= secs %>" required>
                              </div>
                            </div>
                          </div>


                          <div class="rem">
                            <p>Remaining Time:</p>
                            <div class="time">
                              <div class="input-group">
                                <label for="hours">Hours:</label>
                                <input type="number" id="hours" name="rem_hours" min="0" value="<%= rem_hours %>" required>
                              </div>
                              <div class="input-group">
                                <label for="minutes">Mins:</label>
                                <input type="number" id="minutes" name="rem_minutes" min="0" max="59" value = "<%= rem_mins %>" required>
                              </div>
                              <div class="input-group">
                                <label for="seconds">Secs:</label>
                                <input type="number" id="seconds" name="rem_seconds" min="0" max="59" value="<%= rem_secs %>" required>
                              </div>
                            </div>
                          </div>
                          <% if (error) { %>
                            <div  style="color:red !important; display: inline; text-align: center;"> Remaining time value must be less than or equal Time </div>
                          <% } %>
                          <button type="submit" class="button" id="edit-btn">Edit</button>
                        </form>
                        
                    </div>
                </main>
            
                
        </section>
    </main>
    <script>
        function logout() {

        const form = document.createElement('form');
        form.method = 'POST'; 
        form.action = '/users/auth/logout'; 
  

        document.body.appendChild(form);
  
        const submitBtn = document.createElement('input');
        submitBtn.type = 'submit';
        form.appendChild(submitBtn);

        form.submit();
      }

        function cancelAddTask() {
          const form = document.createElement('form');
          form.method = 'POST'; 
          form.action = '/users/auth/logout'; 
          form.style.display = "none";
    
          document.body.appendChild(form);
    
          const submitBtn = document.createElement('input');
          submitBtn.type = 'submit';
          form.appendChild(submitBtn);
    
          form.submit();
      }
      </script>
    
    
</body>
</html>
